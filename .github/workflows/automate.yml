name: Deploy the Code to AWS.
on:
    push:
        branches:
            main


env:
    AWS_REGION: us-east-1
    ECS_REPOSITORY: recommendationsystem
    ECS_SERVICE: recommendationservice
    ECS_CLUSTER: recommendationcluster
    ECS_TASK_DEFINITION: task-definition.json
    CONTAINER_NAME: recommendationcontainer

jobs:
    job1:
        runs-on: ubuntu-latest
        steps:
            - name: To get access to the repository
              uses: actions/checkout@v1
            - name: Install Python 3
              uses: actions/setup-python@v1
              with:
                python-version: 3.9
                
            - name: Install dependencies
              run: 
                python3 -m pip install --upgrade pip
                pip install -r requirements.txt

    job2:
        needs: job1
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: Doing the checkout for the repository
              uses: actions/checkout@v1

            - name: Configure the AWS Client/ Cloud credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
                aws-secret-access-key: ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-region: ${{env.AWS_REGION}}

            - name: Login to AWS ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Building the Docker image and Pushing it to ECR Registry
              id: build-image
              env:
                ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
                IMAGE_TAG: ${{github.sha}}
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


            - name: Fill the new image in the ECS Task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: ${{env.ECS_TASK_DEFINITION}}
                container-name: ${{env.CONTAINER_NAME}}
                image: ${{steps.build-image.outputs.image}}


            - name: Run the Task definition/Service with task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{steps.task-def.outputs.task-definition}}
                service: ${{env.ECS_SERVICE}}
                cluster: ${{env.ECS_CLUSTER}}
                wait-for-service-stability: true




    